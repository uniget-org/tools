name: Tag latest

on:
  push:
    branches:
    - "main"
    paths:
    - "tools/**"
    - ".github/workflows/tag.yml"
  workflow_dispatch:
    inputs:
      tools:
        description: 'Tools to build/promote'
        type: string
        default: ''

concurrency:
  group: push

jobs:

  collect:
    name: Collect changed tools
    runs-on: ubuntu-22.04
    outputs:
      tools: ${{ steps.collect.outputs.tools }}
    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: gojq regclient

    - name: Collect
      id: collect
      env:
        DOCKER_BUILDKIT: 1
      run: |
        CHANGED_TOOLS="${{ inputs.tools }}"

        if test -z "${CHANGED_TOOLS}"; then
            echo "### Fetching config for metadata"
            OLD_COMMIT_SHA="$(
                helper/usr/local/bin/regctl manifest get ghcr.io/uniget-org/tools/metadata:main --format raw-body \
                | helper/usr/local/bin/jq --raw-output '.layers[0].digest' \
                | xargs -I{} \
                    helper/usr/local/bin/regctl blob get ghcr.io/uniget-org/tools/metadata:main {} \
                | tar --extract --gzip --to-stdout \
                | helper/usr/local/bin/jq --raw-output '.revision'
            )"

            echo "### Fetching changed tools for ${OLD_COMMIT_SHA}..${GITHUB_SHA}"
            CHANGED_TOOLS="$(
                git log --pretty=format: --name-only --diff-filter=d ${OLD_COMMIT_SHA}..${GITHUB_SHA} \
                | sort \
                | grep -E "^tools/[^/]+/" \
                | cut -d/ -f2 \
                | uniq \
                | xargs
            )"
        fi

        echo "### Tools to process: ${CHANGED_TOOLS}."
        CHANGED_TOOLS_JSON="$(
            echo -n "${CHANGED_TOOLS}" \
            | tr ' ' '\n' \
            | helper/usr/local/bin/jq --raw-input '.' | jq --slurp --compact-output '.'
        )"
        echo "    JSON: ${CHANGED_TOOLS_JSON}"
        echo "tools=${CHANGED_TOOLS_JSON}" >>"${GITHUB_OUTPUT}"

  tag:
    name: Tag latest
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-22.04
    needs:
    - collect
    if: ${{ needs.collect.outputs.tools != '[]' && needs.collect.outputs.tools != '' }}
    strategy:
      fail-fast: false
      matrix:
        tool: ${{ fromJSON(needs.collect.outputs.tools) }}
    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: gojq regclient yq

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: uniget-bot
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag latest
      run: |
        echo "### Processing ${{ matrix.tool }}"
        sha_main="$(
            helper/usr/local/bin/regctl manifest head ghcr.io/uniget-org/tools/${{ matrix.tool }}:main || true
        )"
        sha_test="$(
            helper/usr/local/bin/regctl manifest head ghcr.io/uniget-org/tools/${{ matrix.tool }}:test || true
        )"
        tool_version="$( helper/usr/local/bin/yq eval .version tools/${{ matrix.tool }}/manifest.yaml )"
        sha_version="$(
            helper/usr/local/bin/regctl manifest head ghcr.io/uniget-org/tools/${{ matrix.tool }}:${tool_version} || true
        )"
        echo "    SHA of tag main: ${sha_main}."
        echo "    SHA of tag test: ${sha_test}."
        echo "    SHA of tag ${tool_version}: ${sha_version}."

        if test "{sha_version:0:3}" == "sha"; then
            echo "### Version SHA found -> no rebuild"

        else
            echo "### Building ${{ matrix.tool }}"
            make "${{ matrix.tool }}--push"
        fi

        echo "### Promoting ${{ matrix.tool }}"
        make "${{ matrix.tool }}--promote"

    - name: Store logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: logs.zip
        path: "**/build.log"

  metadata:
    name: Metadata
    permissions:
      packages: write
    runs-on: ubuntu-22.04
    needs:
    - tag
    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: gojq regclient yq

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: uniget-bot
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Update metadata
      run: |
        make metadata.json--push

  pages:
    name: tools.uniget.dev
    runs-on: ubuntu-22.04
    needs:
    - metadata
    steps:

    - name: Trigger
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl \
            --url https://api.github.com/repos/uniget-org/tools.uniget.dev/dispatches \
            --silent \
            --fail \
            --request POST \
            --header "Authorization: token ${GITHUB_TOKEN}" \
            --header "Accept: application/vnd.github.v3+json" \
            --data '{"event_type": "pages"}'