name: Wrap Scan

on:
  pull_request:
    types:
    - opened
    - synchronize
    paths:
    - tools/**
    - .github/workflows/*

jobs:

  collect:
    name: Collect tools
    runs-on: ubuntu-22.04
    outputs:
      tools: ${{ steps.collect.outputs.tools }}
    steps:

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: gojq regclient

    - name: Collect
      id: collect
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR: ${{ github.event.pull_request.number }}
      run: |
        set -o errexit -o pipefail

        echo "### This is PR ${PR}"
        TOOLS="$(
            curl --silent --show-error --fail \
                --header "Accept: application/vnd.github.v3+json" \
                --header "Authorization: Bearer ${GITHUB_TOKEN}" \
                --url "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PR}/files" \
            | helper/usr/local/bin/jq --raw-output '.[] | select(.status != "removed") | .filename' \
            | grep -E '^tools/[^/]+/' \
            | cut -d/ -f2 \
            | uniq \
            | xargs echo
        )"
        echo "### Got TOOLS=${TOOLS}."
        
        TOOLS_JSON="$(
            echo -n "${TOOLS}" \
            | tr ' ' '\n' \
            | helper/usr/local/bin/jq --raw-input '.' \
            | helper/usr/local/bin/jq --slurp --compact-output '.'
        )"
        echo "    JSON: ${TOOLS_JSON}"
        echo "tools=${TOOLS_JSON}" >>"${GITHUB_OUTPUT}"

  #test_scan:
  #  name: Scan dummy container image
  #  permissions:
  #    security-events: write
  #    pull-requests: write
  #  uses: ./.github/workflows/scan.yml
  #  with:
  #    name_and_version: "dummy:0.0.1"
  #  secrets:
  #    DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  #    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  collect_versions:
    name: Collect versions for tools
    needs:
    - collect
    runs-on: ubuntu-22.04
    outputs:
      tools_with_version: ${{ steps.collect_versions.outputs.tools_with_version }}
    env:
      tools: ${{ needs.collect.outputs.tools }}
    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: yq gojq

    - name: Extract versions
      run: |
        echo "Processing tools: ${tools}."

        tools_with_version=""
        TOOLS_RAW="$(
            echo "${tools}" \
            | helper/usr/local/bin/jq --raw-output '.[]'
        )"

        for TOOL in ${TOOLS_RAW}; do
            echo "${TOOL}"
            VERSION="$( helper/usr/local/bin/yq '.version' "tools/${TOOL}/manifest.yaml" )"
            echo "${VERSION}"
            tools_with_version="${tools_with_version}${TOOL}:${VERSION} "
        done
        echo "tools_with_version=${tools_with_version}."

        tools_with_version_json="$(
            echo -n "${tools_with_version}" \
            | tr ' ' '\n' \
            | helper/usr/local/bin/jq --raw-input '.' \
            | helper/usr/local/bin/jq --slurp --compact-output '.'
        )"
        echo "tools_with_version=${tools_with_version_json}" >>"${GITHUB_OUTPUT}"

  scan:
    name: Scan container images
    needs:
    - collect_versions
    permissions:
      security-events: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        tool_with_version: ${{ fromJSON(needs.collect_versions.outputs.tools_with_version) }}
    uses: ./.github/workflows/scan.yml
    with:
      name_and_version: ${{ matrix.tool_with_version }}
    secrets:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
