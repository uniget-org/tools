#syntax=docker/dockerfile:1.15.0@sha256:05e0ad437efefcf144bfbf9d7f728c17818408e6d01432d9e264ef958bbd52f3

FROM ghcr.io/uniget-org/tools/go:latest AS go
FROM ghcr.io/uniget-org/tools/make:latest AS make
FROM ghcr.io/uniget-org/tools/tini:main AS tini

FROM registry.gitlab.com/uniget-org/images/build-base:3.21 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
RUN --mount=type=cache,target=/var/cache/apk <<EOF
apk add --update-cache \
    libseccomp-dev \
    libseccomp-static
EOF
COPY --link --from=go / /usr/local/
COPY --link --from=make / /usr/local/
COPY --link --from=tini / /usr/local/
WORKDIR /go/src/github.com/gotoz/runq
ARG name
ARG version
RUN --mount=type=cache,target=/root/go/pkg/mod <<EOF
git clone -q --config advice.detachedHead=false --depth 1 --branch "${version}" --recurse-submodules https://github.com/gotoz/runq .
make -j$(nproc)
EOF
RUN --mount=type=cache,target=/root/go/pkg/mod <<EOF
mkdir -p /var/lib/runq/qemu
mv /usr/local/bin/tini /usr/bin/docker-init
export QEMU_ROOT="${prefix}/var/lib/runq"
make -j$(nproc) version
make -j$(nproc) -C cmd/proxy install
make -j$(nproc) -C cmd/runq install
make -j$(nproc) -C cmd/runq-exec install
install -m 0444 -D version /var/lib/runq/version
mkdir -p "${prefix}/var/lib/runq"
cp -r /var/lib/runq/ "${prefix}/var/lib/"
EOF