#syntax=docker/dockerfile:1.8.0

FROM ghcr.io/uniget-org/images/ubuntu:24.04@sha256:dc6c0030ff36d8c83922c5c24088c89faf3cb4f0b21540e231f35408453b76c3 AS cosign-bootstrap
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
ARG TARGETPLATFORM
# renovate: datasource=github-releases depName=sigstore/cosign
ARG COSIGN_VERSION=2.2.3
COPY checksums.txt .
RUN <<EOF
check-github-release-asset "sigstore/cosign" "v${COSIGN_VERSION}" "cosign-linux-${alt_arch}"
echo "### Installing cosign ${COSIGN_VERSION} for bootstrapping on ${TARGETPLATFORM} (${alt_arch})"
curl --silent --show-error --location --fail --remote-name \
    "https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign-linux-${alt_arch}"
chmod +x "cosign-linux-${alt_arch}"

echo "### Checking cosign ${COSIGN_VERSION} for bootstrapping"
sha256sum --check --ignore-missing checksums.txt

mv "cosign-linux-${alt_arch}" /usr/local/bin/cosign
cosign version
EOF

FROM ghcr.io/uniget-org/images/ubuntu:24.04@sha256:dc6c0030ff36d8c83922c5c24088c89faf3cb4f0b21540e231f35408453b76c3 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=cosign-bootstrap /usr/local/bin/cosign /usr/local/bin/
ARG name
ARG version
RUN <<EOF
check-github-release-asset "sigstore/cosign" "v${version}" "cosign-linux-${alt_arch}"
echo "### Installing cosign ${version}"
curl --silent --show-error --location --fail --output "${prefix}/bin/cosign" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}"
chmod +x "${prefix}/bin/cosign"

echo "### Installing shell completion for cosign ${version}"
"${prefix}/bin/cosign" completion bash >"${prefix}/share/bash-completion/completions/cosign"
"${prefix}/bin/cosign" completion fish >"${prefix}/share/fish/vendor_completions.d/cosign.fish"
"${prefix}/bin/cosign" completion zsh >"${prefix}/share/zsh/vendor-completions/_cosign"

echo "### Checking PGP signature for cosign ${version}"
curl --silent --show-error --location --fail --output "cosign-linux-${alt_arch}.sig" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}.sig"
COSIGN_PUB_KEY="https://github.com/sigstore/cosign/releases/download/v${version}/release-cosign.pub"
cosign verify-blob --key "${COSIGN_PUB_KEY}" --signature "cosign-linux-${alt_arch}.sig" "${prefix}/bin/cosign"
rm -f "cosign-linux-${alt_arch}.sig"

echo "### Checking keyless signature for cosign ${version}"
curl --silent --show-error --location --fail --output "cosign-linux-${alt_arch}-keyless.pem" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}-keyless.pem"
curl --silent --show-error --location --fail --output "cosign-linux-${alt_arch}-keyless.sig" \
    "https://github.com/sigstore/cosign/releases/download/v${version}/cosign-linux-${alt_arch}-keyless.sig"
COSIGN_EXPERIMENTAL=1 cosign verify-blob \
    --cert "cosign-linux-${alt_arch}-keyless.pem" \
    --signature "cosign-linux-${alt_arch}-keyless.sig" \
    --certificate-oidc-issuer https://accounts.google.com \
    --certificate-identity "keyless@projectsigstore.iam.gserviceaccount.com" \
    "${prefix}/bin/cosign"
rm -f "cosign-linux-${alt_arch}-keyless.pem" "cosign-linux-${alt_arch}-keyless.sig"

"${prefix}/bin/cosign" version
EOF