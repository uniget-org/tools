#syntax=docker/dockerfile:1.6.0

FROM ghcr.io/uniget-org/tools/make:latest AS make

FROM ghcr.io/uniget-org/images/build-base:3.19 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=make / /usr/local/
RUN <<EOF
apt-get -y install \
    cmake \
    libglib2.0-dev \
    libgcrypt20-dev \
    flex \
    yacc \
    bison \
    byacc \
    libpcap-dev \
    libssh-dev \
    libsystemd-dev \
    libc-ares-dev \
    libspeexdsp-dev
EOF
WORKDIR /tmp/wireshark
ARG name
ARG version
RUN <<EOF
check-download "https://gitlab.com/wireshark/wireshark/-/archive/v4.2.2/wireshark-v4.2.2.tar.gz"
curl --silent --show-error --location --fail "https://gitlab.com/wireshark/wireshark/-/archive/v4.2.2/wireshark-v4.2.2.tar.gz" \
| tar --extract --gzip --strip-components=1 --no-same-owner
cmake . \
    -DENABLE_CARES=ON \
    -DENABLE_GNUTLS=ON \
    -DENABLE_LUA=ON \
    -DENABLE_SMI=ON \
    -DBUILD_sshdump=ON \
    -DBUILD_ciscodump=ON \
    -DENABLE_NGHTTP2=ON \
    -DBUILD_wireshark=OFF \
    -DENABLE_APPLICATION_BUNDLE=OFF \
    -DCMAKE_INSTALL_PREFIX=${prefix} \
    -DCMAKE_BUILD_TYPE=Release \
    -Wno-dev #\
    #-DCMAKE_VERBOSE_MAKEFILE=ON \
    #-DENABLE_STATIC=ON \
    #-DUSE_STATIC=ON
make -j$(nproc)
make install
EOF

RUN <<EOF
touch "${prefix}/foo"
EOF

# completion
#RUN <<EOF
#"${prefix}/bin/foo" completion bash >"${prefix}/share/bash-completion/completions/foo"
#"${prefix}/bin/foo" completion fish >"${prefix}/share/fish/vendor_completions.d/foo.fish"
#"${prefix}/bin/foo" completion zsh >"${prefix}/share/zsh/vendor-completions/_foo"
#EOF