#syntax=docker/dockerfile:1.12.0@sha256:db1ff77fb637a5955317c7a3a62540196396d565f3dd5742e76dddbb6d75c4c5

FROM ghcr.io/uniget-org/tools/make:latest AS make

FROM registry.gitlab.com/uniget-org/images/build-essential:24.04@sha256:56a2ccde1ca1b71355c009245d0811ff3a9ce945124f9fbe7a21f317b5d0cf4a AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=make / /usr/local/
WORKDIR /tmp/musl
ARG name
ARG version
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://musl.libc.org/releases/musl-${version}.tar.gz"
filename="$(basename "${url}")"

check-download "${url}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --strip-components=1 --no-same-owner

./configure \
    --prefix="${prefix}" \
    --libdir="${prefix}/lib/${arch}-linux-musl" \
    --includedir="${prefix}/include/${arch}-linux-musl" \
    --syslibdir="${prefix}/lib"
make -j"$(nproc)"
make install
EOF
COPY <<"EOF" /uniget_bootstrap/etc/ld.so.conf.d/musl.conf.go-template
{{ .Target }}/lib/x86_64-linux-musl
{{ .Target }}/lib/aarch64-linux-musl
EOF
COPY <<EOF /uniget_bootstrap/etc/ld-musl-x86_64.d/ld-musl-x86_64.path.go-template
/lib
{{ .Target }}/lib/x86_64-linux-musl
EOF
COPY <<EOF /uniget_bootstrap/etc/ld-musl-aarch64.path.go-template
/lib
{{ .Target }}/lib/aarch64-linux-musl
EOF
RUN <<EOF
ln --symbolic --relative --force "${prefix}/lib/x86_64-linux-musl/libc.so" "${prefix}/lib/libc.musl-${arch}.so.1"
ln --symbolic --relative --force "${prefix}/lib/x86_64-linux-musl/libc.so" "${prefix}/lib/ld-musl-${arch}.so.1"
ln --symbolic --relative --force "${prefix}/lib/x86_64-linux-musl/libc.so" "${prefix}/bin/musl-ldd"

mv "${prefix}/bin/musl-gcc" "${prefix}/bin/${arch}-linux-musl-gcc.go-template"
sed -i -E "s|${prefix}|{{ .Target }}|g" "${prefix}/bin/${arch}-linux-musl-gcc.go-template"
ln --symbolic --relative --force "${prefix}/bin/${arch}-linux-musl-gcc" "${prefix}/bin/musl-gcc"

mv "${prefix}/lib/${arch}-linux-musl/musl-gcc.specs" "${prefix}/lib/${arch}-linux-musl/musl-gcc.specs.go-template"
sed -i -E "s|${prefix}|{{ .Target }}|g" "${prefix}/lib/${arch}-linux-musl/musl-gcc.specs.go-template"

cp "${prefix}/etc/ld-musl-x86_64.d/ld-musl-x86_64.path.go-template" "${prefix}/etc/ld-musl-x86_64.path"
EOF