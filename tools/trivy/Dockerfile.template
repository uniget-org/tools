#syntax=docker/dockerfile:1.10.0@sha256:fe40cf4e92cd0c467be2cfc30657a680ae2398318afd50b0c80585784c604f28

FROM ghcr.io/uniget-org/tools/cosign:latest AS cosign

FROM ghcr.io/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=cosign / /usr/local/
ARG TARGETPLATFORM
ARG name
ARG version
RUN <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix=64bit
        ;;
    aarch64)
        export arch_suffix=ARM64
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

check-github-release-asset "aquasecurity/trivy" "v${version}" "trivy_${version}_Linux-${arch_suffix}.tar.gz"

echo "### Downloading trivy ${version}"
curl --silent --show-error --location --fail --remote-name \
      "https://github.com/aquasecurity/trivy/releases/download/v${version}/trivy_${version}_Linux-${arch_suffix}.tar.gz"

echo "### Checking keyless signature for trivy ${version}"
curl --silent --show-error --location --fail --remote-name \
      "https://github.com/aquasecurity/trivy/releases/download/v${version}/trivy_${version}_Linux-${arch_suffix}.tar.gz.pem"
curl --silent --show-error --location --fail --remote-name \
      "https://github.com/aquasecurity/trivy/releases/download/v${version}/trivy_${version}_Linux-${arch_suffix}.tar.gz.sig"
SHA="$(
    git ls-remote --tags https://github.com/aquasecurity/trivy "v${version}" \
    | cut -f1
)"
COSIGN_EXPERIMENTAL=1 cosign verify-blob \
    --cert "trivy_${version}_Linux-${arch_suffix}.tar.gz.pem" \
    --signature "trivy_${version}_Linux-${arch_suffix}.tar.gz.sig" \
    --certificate-oidc-issuer https://token.actions.githubusercontent.com \
    --certificate-identity "https://github.com/aquasecurity/trivy/.github/workflows/reusable-release.yaml@refs/tags/v${version}" \
    --certificate-github-workflow-name Release \
    --certificate-github-workflow-ref "refs/tags/v${version}" \
    --certificate-github-workflow-repository "aquasecurity/trivy" \
    --certificate-github-workflow-sha "${SHA}" \
    --certificate-github-workflow-trigger push \
    "trivy_${version}_Linux-${arch_suffix}.tar.gz"

echo "### Installing trivy ${version}"
tar --extract --gzip --directory="${prefix}/bin" --file "trivy_${version}_Linux-${arch_suffix}.tar.gz" \
    trivy \
    contrib
rm -f "trivy_${version}_Linux-${arch_suffix}.tar.gz"

echo "### Installing trivy ${version} completion"
"${prefix}/bin/trivy" completion bash >"${prefix}/share/bash-completion/completions/trivy"
"${prefix}/bin/trivy" completion fish >"${prefix}/share/fish/vendor_completions.d/trivy.fish"
"${prefix}/bin/trivy" completion zsh  >"${prefix}/share/zsh/vendor-completions/_trivy"

echo "### Moving templates for trivy ${version}"
mkdir -p "${prefix}/share/trivy"
mv "${prefix}/bin/contrib" "${prefix}/share/trivy/"
EOF

RUN <<EOF
echo "### Installing SonarQube template for trivy ${version}"
curl --silent --show-error --location --fail --output "${prefix}/share/trivy/contrib/sonarqube.tpl" \
      https://github.com/mendhak/trivy-template-output-to-sonarqube/raw/master/sonarqube.tpl
EOF