#syntax=docker/dockerfile:1.14.0@sha256:4c68376a702446fc3c79af22de146a148bc3367e73c25a5803d453b6b3f722fb

FROM ghcr.io/uniget-org/tools/cosign:latest AS cosign

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=cosign / /usr/local/
ARG name
ARG version
COPY gitsign-credential-cache.sh /uniget_bootstrap/etc/profile.d/
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://github.com/sigstore/gitsign/releases/download/v${version}/gitsign_${version}_linux_${alt_arch}"
filename="$( basename "${url}" )"

check-github-release-asset "sigstore/gitsign" "v${version}" "${filename}"
echo "### Installing gitsign ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

echo "### Checking keyless signature for gitsign ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}.pem" \
    "${url}.pem"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}.sig" \
    "${url}.sig"
SHA="$(
    git ls-remote --tags https://github.com/sigstore/gitsign "v${version}^{}" \
    | cut -f1
)"
COSIGN_EXPERIMENTAL=1 cosign verify-blob \
    --cert "${uniget_cache_download}/${filename}.pem" \
    --signature "${uniget_cache_download}/${filename}.sig" \
    --certificate-oidc-issuer https://token.actions.githubusercontent.com \
    --certificate-identity "https://github.com/sigstore/gitsign/.github/workflows/release.yml@refs/tags/v${version}" \
    --certificate-github-workflow-name release \
    --certificate-github-workflow-ref "refs/tags/v${version}" \
    --certificate-github-workflow-repository "sigstore/gitsign" \
    --certificate-github-workflow-sha "${SHA}" \
    --certificate-github-workflow-trigger push \
    "${uniget_cache_download}/${filename}"

install --mode=0755 \
    "${uniget_cache_download}/${filename}" \
    "${prefix}/bin/gitsign"
EOF
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://github.com/sigstore/gitsign/releases/download/v${version}/gitsign-credential-cache_${version}_linux_${alt_arch}"
filename="$( basename "${url}" )"

check-github-release-asset "sigstore/gitsign" "v${version}" "${filename}"

echo "### Installing gitsign-credential-cache ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

echo "### Checking keyless signature for gitsign-credential-cache ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}.pem" \
    "${url}.pem"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}.sig" \
    "${url}.sig"
COSIGN_EXPERIMENTAL=1 cosign verify-blob \
    --cert "${uniget_cache_download}/${filename}.pem" \
    --signature "${uniget_cache_download}/${filename}.sig" \
    --certificate-oidc-issuer https://token.actions.githubusercontent.com \
    --certificate-identity "https://github.com/sigstore/gitsign/.github/workflows/release.yml@refs/tags/v${version}" \
    --certificate-github-workflow-name release \
    --certificate-github-workflow-ref "refs/tags/v${version}" \
    --certificate-github-workflow-repository "sigstore/gitsign" \
    --certificate-github-workflow-sha "${SHA}" \
    --certificate-github-workflow-trigger push \
    "${uniget_cache_download}/${filename}"

install --mode=0755 \
    "${uniget_cache_download}/${filename}" \
    "${prefix}/bin/gitsign-credential-cache"
EOF
RUN <<EOF
"${prefix}/bin/gitsign" completion bash >"${prefix}/share/bash-completion/completions/gitsign"
"${prefix}/bin/gitsign" completion fish >"${prefix}/share/fish/vendor_completions.d/gitsign.fish"
"${prefix}/bin/gitsign" completion zsh >"${prefix}/share/zsh/vendor-completions/_gitsign"
EOF
COPY gitsign.service.go-template /uniget_bootstrap/etc/systemd/user/
COPY gitsign.socket /uniget_bootstrap/etc/systemd/user/