#syntax=docker/dockerfile:1.19.0@sha256:dabfc0969b935b2080555ace70ee69a5261af8a8f1b4df97b9e7fbcf6722eddf

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
ARG name
ARG version
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix=x64
        ;;
    aarch64)
        export arch_suffix="${alt_arch}"
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

url="https://storage.googleapis.com/dart-archive/channels/stable/release/${version}/sdk/dartsdk-linux-${arch_suffix}-release.zip"
filename="$(basename "${url}")"

check-download "${url}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

mkdir -p "${prefix}/opt"
unzip -t "${uniget_cache_download}/${filename}"
unzip -q -o -d "${prefix}/opt/" "${uniget_cache_download}/${filename}"

mv "${prefix}/opt/dart-sdk" "${prefix}/opt/dart"

ln --symbolic --relative --force \
    "${prefix}/opt/dart/bin/dart" \
    "${prefix}/bin/dart"
ln --symbolic --relative --force \
    "${prefix}/opt/dart/bin/dartaotruntime" \
    "${prefix}/bin/dartaotruntime"
EOF