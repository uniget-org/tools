#syntax=docker/dockerfile:1.7.1

FROM ghcr.io/uniget-org/tools/openjdk:latest AS openjdk

FROM ghcr.io/uniget-org/images/ubuntu:22.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --from=openjdk / /usr/local/
ARG name
ARG version
RUN <<EOF
jlink --strip-debug --no-man-pages --no-header-files --compress=2 --output "${prefix}/opt/openjdk-jre" --add-modules \
    java.base,java.compiler,java.datatransfer,java.desktop,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.smartcardio,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.charsets,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.httpserver,jdk.incubator.vector,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jdwp.agent,jdk.jfr,jdk.jsobject,jdk.localedata,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.xml.dom,jdk.zipfs
cd "${prefix}/opt/openjdk-jre/bin"
find . -type f -executable \
| while read -r BINARY; do
    ln --symbolic --relative --force "${prefix}/opt/openjdk-jre/bin/${BINARY:2}" "${prefix}/bin/${BINARY:2}"
done
EOF