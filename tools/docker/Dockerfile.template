#syntax=docker/dockerfile:1.18.0@sha256:dabfc0969b935b2080555ace70ee69a5261af8a8f1b4df97b9e7fbcf6722eddf

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
ARG name
ARG version
RUN <<EOF
mkdir -p "${prefix}/libexec/${name}/bin"
EOF

RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://download.docker.com/linux/static/stable/${arch}/docker-${version}.tgz"
filename="$( basename "${url}" )"

check-download "${url}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/libexec/${name}/bin" --no-same-owner --strip-components=1
mv "${prefix}/libexec/${name}/bin/dockerd"      "${prefix}/bin/"
mv "${prefix}/libexec/${name}/bin/docker"       "${prefix}/bin/"
mv "${prefix}/libexec/${name}/bin/docker-proxy" "${prefix}/bin/"
EOF

RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://download.docker.com/linux/static/stable/${arch}/docker-rootless-extras-${version}.tgz"
filename="$( basename "${url}" )"

check-download "${url}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/libexec/${name}/bin" --no-same-owner --strip-components=1
mv "${prefix}/libexec/${name}/bin/dockerd-rootless.sh"           "${prefix}/bin/"
mv "${prefix}/libexec/${name}/bin/dockerd-rootless-setuptool.sh" "${prefix}/bin/"
EOF

RUN <<EOF
"${prefix}/bin/docker" completion bash >"${prefix}/share/bash-completion/completions/docker"
"${prefix}/bin/docker" completion fish >"${prefix}/share/fish/vendor_completions.d/docker.fish"
"${prefix}/bin/docker" completion zsh >"${prefix}/share/zsh/vendor-completions/_docker"
EOF

RUN <<EOF
check-download "https://github.com/moby/moby/raw/v${version}/contrib/init/systemd/docker.service"
curl --silent --show-error --location --fail --output "${prefix}/etc/systemd/system/${name}.service.go-template" \
    "https://github.com/moby/moby/raw/v${version}/contrib/init/systemd/docker.service"
curl --silent --show-error --location --fail --output "${prefix}/etc/systemd/system/${name}.socket" \
    "https://github.com/moby/moby/raw/v${version}/contrib/init/systemd/docker.socket"
sed -i -E 's|(After=network-online.target docker.socket).+|\1|' "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i -E 's|(Wants=network-online.target).+|\1|' "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i "/^\[Service\]/a Environment=PATH=/usr/local/libexec/${name}/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin" "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i -E 's|ExecStart=/usr/bin/dockerd -H fd://.+|ExecStart=dockerd -H fd://|' "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i "/^\[Unit\]/a PartOf=docker.service" "${prefix}/etc/systemd/system/${name}.socket"
EOF

COPY daemon.json /uniget_bootstrap/etc/docker/
