#syntax=docker/dockerfile:1.17.0@sha256:e63addfe27b10e394a5f9f1e866961adc70d08573f1cb80f8d1a0999347b3553

FROM ghcr.io/uniget-org/tools/cosign:latest AS cosign

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=cosign / /usr/local/
WORKDIR /tmp/goreleaser
ARG name
ARG version
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix="${arch}"
        ;;
    aarch64)
        export arch_suffix="${alt_arch}"
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

url="https://github.com/goreleaser/goreleaser/releases/download/v${version}/goreleaser_Linux_${arch_suffix}.tar.gz"
filename="$( basename "${url}" )"
check-github-release-asset "goreleaser/goreleaser" "v${version}" "${filename}"
echo "### Downloading goreleaser ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

url="https://github.com/goreleaser/goreleaser/releases/download/v${version}/checksums.txt"
checksum_filename="$( basename "${url}" )"
echo "### Downloading checksums"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${checksum_filename}" \
    "https://github.com/goreleaser/goreleaser/releases/download/v${version}/checksums.txt"
pushd "${uniget_cache_download}"
sha256sum --check --ignore-missing "${uniget_cache_download}/${checksum_filename}"
popd

echo "### Downloading signature and certificate"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${checksum_filename}.sig" \
    "${url}.sig"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${checksum_filename}.pem" \
    "${url}.pem"

echo "### Verifying keyless signature"
SHA="$(
    git ls-remote --tags https://github.com/goreleaser/goreleaser "v${version}^{}" \
    | cut -f1
)"
COSIGN_EXPERIMENTAL=1 cosign verify-blob "${uniget_cache_download}/${checksum_filename}" \
    --signature "${uniget_cache_download}/${checksum_filename}.sig" \
    --certificate "${uniget_cache_download}/${checksum_filename}.pem" \
    --certificate-oidc-issuer https://token.actions.githubusercontent.com \
    --certificate-identity "https://github.com/goreleaser/goreleaser/.github/workflows/release.yml@refs/tags/v${version}" \
    --certificate-github-workflow-name release \
    --certificate-github-workflow-repository goreleaser/goreleaser \
    --certificate-github-workflow-ref "refs/tags/v${version}" \
    --certificate-github-workflow-sha "${SHA}"

echo "### Unpacking"
tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/bin/" --no-same-owner \
    goreleaser \
    manpages \
    completions

echo "### Moving manpages"
mv "${prefix}/bin/manpages/goreleaser.1.gz" "${prefix}/share/man/man1/"

echo "### Moving completions"
mv "${prefix}/bin/completions/goreleaser.bash" "${prefix}/share/bash-completion/completions/goreleaser"
mv "${prefix}/bin/completions/goreleaser.fish" "${prefix}/share/fish/vendor_completions.d/goreleaser.fish"
mv "${prefix}/bin/completions/goreleaser.zsh" "${prefix}/share/zsh/vendor-completions/_goreleaser"

echo "### Cleaning up"
rmdir \
    "${prefix}/bin/manpages" \
    "${prefix}/bin/completions"
EOF