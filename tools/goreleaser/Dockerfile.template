#syntax=docker/dockerfile:1.8.0

FROM ghcr.io/uniget-org/tools/cosign:latest AS cosign

FROM ghcr.io/uniget-org/images/ubuntu:24.04@sha256:dc6c0030ff36d8c83922c5c24088c89faf3cb4f0b21540e231f35408453b76c3 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=cosign / /usr/local/
WORKDIR /tmp/goreleaser
ARG name
ARG version
RUN <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix="${arch}"
        ;;
    aarch64)
        export arch_suffix="${alt_arch}"
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

check-github-release-asset "goreleaser/goreleaser" "v${version}" "goreleaser_Linux_${arch_suffix}.tar.gz"

echo "### Downloading goreleaser ${version}"
curl --silent --show-error --location --fail --remote-name "https://github.com/goreleaser/goreleaser/releases/download/v${version}/goreleaser_Linux_${arch_suffix}.tar.gz"

echo "### Downloading checksums"
curl --silent --show-error --location --fail --remote-name "https://github.com/goreleaser/goreleaser/releases/download/v${version}/checksums.txt"
sha256sum --check --ignore-missing checksums.txt

echo "### Downloading signature and certificate"
curl --silent --show-error --location --fail --remote-name "https://github.com/goreleaser/goreleaser/releases/download/v${version}/checksums.txt.sig"
curl --silent --show-error --location --fail --remote-name "https://github.com/goreleaser/goreleaser/releases/download/v${version}/checksums.txt.pem"

echo "### Verifying keyless signature"
SHA="$(
    git ls-remote --tags https://github.com/goreleaser/goreleaser "v${version}^{}" \
    | cut -f1
)"
COSIGN_EXPERIMENTAL=1 cosign verify-blob checksums.txt \
    --signature checksums.txt.sig \
    --certificate checksums.txt.pem \
    --certificate-oidc-issuer https://token.actions.githubusercontent.com \
    --certificate-identity "https://github.com/goreleaser/goreleaser/.github/workflows/release.yml@refs/tags/v${version}" \
    --certificate-github-workflow-name release \
    --certificate-github-workflow-repository goreleaser/goreleaser \
    --certificate-github-workflow-ref "refs/tags/v${version}" \
    --certificate-github-workflow-sha "${SHA}"

echo "### Unpacking"
tar --extract --gzip --file="goreleaser_Linux_${arch_suffix}.tar.gz" --directory="${prefix}/bin/" --no-same-owner \
    goreleaser \
    manpages \
    completions

echo "### Moving manpages"
mv "${prefix}/bin/manpages/goreleaser.1.gz" "${prefix}/share/man/man1/"

echo "### Moving completions"
mv "${prefix}/bin/completions/goreleaser.bash" "${prefix}/share/bash-completion/completions/goreleaser"
mv "${prefix}/bin/completions/goreleaser.fish" "${prefix}/share/fish/vendor_completions.d/goreleaser.fish"
mv "${prefix}/bin/completions/goreleaser.zsh" "${prefix}/share/zsh/vendor-completions/_goreleaser"

echo "### Cleaning up"
rmdir \
    "${prefix}/bin/manpages" \
    "${prefix}/bin/completions"
EOF