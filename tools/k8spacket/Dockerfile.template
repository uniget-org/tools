#syntax=docker/dockerfile:1.8.0

FROM ghcr.io/uniget-org/tools/go:latest AS go
FROM ghcr.io/uniget-org/tools/bpftool:latest AS bpftool
FROM ghcr.io/uniget-org/tools/libbpf:latest AS libbpf

FROM ghcr.io/uniget-org/images/ubuntu:24.04@sha256:6ff62e5ed6b1c33f0ae1644692a354281534a37ec4d752cf480850e19a94d16d AS headers
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=bpftool / /usr/local/
COPY --link --from=libbpf / /usr/local/
WORKDIR /go/src/github.com/k8spacket/k8spacket
ARG name
ARG version
RUN <<EOF
git clone -q --config advice.detachedHead=false --depth 1 --branch "v${version}" https://github.com/k8spacket/k8spacket .
./libbpf.sh
cp *.h ebpf/inet/bpf
cp *.h ebpf/tc/bpf
EOF

FROM headers AS prepare
RUN <<EOF
apt-get update
apt-get -y install --no-install-recommends \
    clang \
    llvm
EOF
COPY --link --from=go / /usr/local/
ARG name
ARG version
ENV GOPROXY=direct
RUN <<EOF
cd ebpf/inet
go generate -ldflags "-w -s"
EOF
RUN <<EOF
cd ebpf/tc
go generate -ldflags "-w -s"
EOF
RUN <<EOF
#./init.sh
export GO111MODULE=on
export CGO_ENABLED=0
go build -ldflags '-w -s' -o "${prefix}/bin/k8spacket" .
EOF
