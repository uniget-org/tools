#syntax=docker/dockerfile:1.6.0

ARG ref=main

FROM ghcr.io/uniget-org/tools/base:${ref} AS prepare
ARG name
ARG version
RUN <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix="${arch}"
        ;;
    aarch64)
        export arch_suffix="${alt_arch}"
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

check-github-release-asset "updatecli/updatecli" "v${version}" "updatecli_Linux_${arch_suffix}.tar.gz"

curl --silent --location --fail "https://github.com/updatecli/updatecli/releases/download/v${version}/updatecli_Linux_${arch_suffix}.tar.gz" \
| tar --extract --gzip --directory="${prefix}${target}/bin/" --no-same-owner \
    updatecli \
    manpages \
    completions

mv "${prefix}${target}/bin/manpages/updatecli.1.gz" "${prefix}${target}/share/man/man1/"
mv "${prefix}${target}/bin/completions/updatecli.bash" "${prefix}${target}/share/bash-completion/completions/updatecli"
mv "${prefix}${target}/bin/completions/updatecli.fish" "${prefix}${target}/share/fish/vendor_completions.d/updatecli.fish"
mv "${prefix}${target}/bin/completions/updatecli.zsh"  "${prefix}${target}/share/zsh/vendor-completions/_updatecli"

rmdir \
    "${prefix}${target}/bin/manpages" \
    "${prefix}${target}/bin/completions"
EOF

# completion
#RUN <<EOF
#"${prefix}${target}/bin/updatecli" completion bash >"${prefix}${target}/share/bash-completion/completions/updatecli"
#"${prefix}${target}/bin/updatecli" completion fish >"${prefix}${target}/share/fish/vendor_completions.d/updatecli.fish"
#"${prefix}${target}/bin/updatecli" completion zsh >"${prefix}${target}/share/zsh/vendor-completions/_updatecli"
#EOF