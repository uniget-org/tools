#syntax=docker/dockerfile:1.19.0@sha256:b6afd42430b15f2d2a4c5a02b919e98a525b785b1aaff16747d2f623364e39b6

FROM ghcr.io/uniget-org/tools/cosign:latest AS cosign

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=cosign / /usr/local/
ARG name
ARG version
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://github.com/smallstep/autocert/releases/download/v${version}/autocert_linux_${version}_${alt_arch}.tar.gz"
filename="$(basename "${url}")"

check-github-release-asset "smallstep/autocert" "v${version}" "${filename}"
echo "### Downloading autocert ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

echo "### Checking keyless signature for autocert ${version}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}.pem" \
    "${url}.pem"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}.sig" \
    "${url}.sig"
SHA="$(
    git ls-remote --tags https://github.com/smallstep/autocert "v${version}" \
    | cut -f1
)"
COSIGN_EXPERIMENTAL=1 cosign verify-blob \
    --cert "${uniget_cache_download}/${filename}.pem" \
    --signature "${uniget_cache_download}/${filename}.sig" \
    --certificate-oidc-issuer https://token.actions.githubusercontent.com \
    --certificate-identity "https://github.com/smallstep/workflows/.github/workflows/goreleaser.yml@refs/heads/main" \
    --certificate-github-workflow-name "Create Release & Upload Assets" \
    --certificate-github-workflow-ref "refs/tags/v${version}" \
    --certificate-github-workflow-repository "smallstep/autocert" \
    --certificate-github-workflow-sha "${SHA}" \
    --certificate-github-workflow-trigger push \
    "${uniget_cache_download}/${filename}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/bin/" --strip-components=1 --no-same-owner \
    "autocert_${version}/autocert"
EOF