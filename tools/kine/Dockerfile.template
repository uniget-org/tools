#syntax=docker/dockerfile:1.10.0@sha256:865e5dd094beca432e8c0a1d5e1c465db5f998dca4e439981029b3b81fb39ed5

FROM ghcr.io/uniget-org/tools/make:latest AS make
FROM ghcr.io/uniget-org/tools/go:latest AS go

FROM registry.gitlab.com/uniget-org/images/build-base:3.20 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
COPY --link --from=go / /usr/local/
COPY --link --from=make / /usr/local/
WORKDIR /go/src/github.com/k3s-io/kine
ARG name
ARG version
RUN --mount=type=cache,target=/root/go/pkg/mod <<EOF
check-clone "https://github.com/k3s-io/kine" "v${version}"
git clone -q --config advice.detachedHead=false --depth 1 --branch "v${version}" https://github.com/k3s-io/kine .

OTHER_LINKFLAGS="-extldflags -static -s"
commit="$(git rev-parse --short HEAD)"
LINKFLAGS="-X github.com/k3s-io/kine/pkg/version.Version=${version}"
LINKFLAGS="-X github.com/k3s-io/kine/pkg/version.GitCommit=${commit} $LINKFLAGS"

export CGO_CFLAGS="-DSQLITE_ENABLE_DBSTAT_VTAB=1 -DSQLITE_USE_ALLOCA=1"
go build -ldflags "$LINKFLAGS $OTHER_LINKFLAGS" -tags nats -o "${prefix}/bin/kine"
EOF