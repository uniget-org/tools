#syntax=docker/dockerfile:1.17.0@sha256:e63addfe27b10e394a5f9f1e866961adc70d08573f1cb80f8d1a0999347b3553

FROM registry.gitlab.com/uniget-org/images/ubuntu:rolling AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
ARG name
ARG version
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix="x64"
        ;;
    aarch64)
        export arch_suffix="${alt_arch}"
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

url="https://github.com/PowerShell/PowerShell/releases/download/v${version}/powershell-${version}-linux-${arch_suffix}.tar.gz"
filename="$(basename "${url}")"

check-github-release-asset "PowerShell/PowerShell" "v${version}" "${filename}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
mkdir -p "${prefix}/opt/microsoft/powershell/7"
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/opt/microsoft/powershell/7" --no-same-owner
EOF
RUN <<EOF
chmod +x "${prefix}/opt/microsoft/powershell/7/pwsh"
ln --symbolic --relative --force "${prefix}/opt/microsoft/powershell/7/pwsh" "${prefix}/bin/pwsh"
EOF
COPY --chmod=0755 <<"EOF" /uniget_bootstrap/bin/pwsh.go-template
#!/bin/bash

export DOTNET_ROOT={{ .Target }}/share/dotnet

if ! ldconfig --print-cache | grep -q libicu; then
    export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
fi

exec {{ .Target }}/opt/microsoft/powershell/7/pwsh "$@"
EOF
