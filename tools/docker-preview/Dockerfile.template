#syntax=docker/dockerfile:1.14.0@sha256:426b85b823c113372f766a963f68cfd9cd4878e1bcc0fda58779127ee98a28eb

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
ARG name
ARG version
RUN <<EOF
mkdir -p "${prefix}/libexec/${name}/bin"
EOF

COPY daemon.json /uniget_bootstrap/etc/docker-preview/
COPY --chmod=0755 <<EOF /uniget_bootstrap/bin/docker-preview
#!/bin/bash
set -o errexit
export DOCKER_HOST=unix:///var/run/docker-preview.sock
exec /libexec/${name}/bin/docker "\$@"
EOF

RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://download.docker.com/linux/static/test/${arch}/docker-${version}.tgz"
filename="$( basename "${url}" )"

check-download "${url}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/libexec/${name}/bin" --no-same-owner --strip-components=1
EOF

RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://download.docker.com/linux/static/test/${arch}/docker-rootless-extras-${version}.tgz"
filename="$( basename "${url}" )"

check-download "${url}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --directory="${prefix}/libexec/${name}/bin" --no-same-owner --strip-components=1
EOF

RUN <<EOF
check-download "https://github.com/moby/moby/raw/v${version}/contrib/init/systemd/docker.service"
curl --silent --show-error --location --fail --output "${prefix}/etc/systemd/system/${name}.service.go-template" \
    "https://github.com/moby/moby/raw/v${version}/contrib/init/systemd/docker.service"
sed -i "/^\[Service\]/a Environment=PATH=/usr/local/libexec/${name}/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin" "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i -E "s|^ExecStart=/usr/bin/dockerd|ExecStart={{ .Target }}/bin/dockerd|" "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i -n '/Type=notify/!p' "${prefix}/etc/systemd/system/${name}.service.go-template"
sed -i -n '/Requires=docker.socket/!p' "${prefix}/etc/systemd/system/${name}.service.go-template"
EOF

COPY daemon.json /uniget_bootstrap/etc/docker/
