#syntax=docker/dockerfile:1.10.0@sha256:865e5dd094beca432e8c0a1d5e1c465db5f998dca4e439981029b3b81fb39ed5

FROM ghcr.io/uniget-org/tools/jq:latest AS jq

FROM registry.gitlab.com/uniget-org/images/ubuntu:24.04 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
RUN --mount=type=cache,target=/var/cache/apt <<EOF
apt-get update
apt-get -y install --no-install-recommends \
    binutils
EOF
COPY --link --from=jq / /usr/local/
ARG name
ARG version
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
echo "### Setting architecture string for ${TARGETPLATFORM}"
case "${arch}" in
    x86_64)
        export arch_suffix="${arch}"
        ;;
    aarch64)
        export arch_suffix="${alt_arch}"
        ;;
    *)
        echo "ERROR: Unsupported architecture ${arch}."
        exit 1
        ;;
esac
echo "    Using ${arch_suffix}"

url="$(
    curl --silent --show-error --location --fail "https://api.github.com/repos/str4d/rage/releases/tags/v${version}" \
    | jq --raw-output --arg arch "${alt_arch}" '
        .assets[] | 
        select(.name | contains($arch)) | 
        select(.name | contains("musl")) | 
        select(.name | endswith(".deb")) | 
        .browser_download_url
    '
)"
if test -z "${url}"; then
    echo "ERROR: Unable to determine asset for ${alt_arch}."
    exit 1
fi
filename="$(basename "${url}")"

curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"
ar -x "${uniget_cache_download}/${filename}"
tar --file="data.tar.xz" --extract --xz --directory="${prefix}" --strip-components=1 --no-same-owner \
    usr/bin \
    usr/share/man \
    usr/share/bash-completion \
    usr/share/fish \
    usr/share/zsh

mv \
    "${prefix}/share/man/man1/man1/rage.1.gz" \
    "${prefix}/share/man/man1/man1/rage-keygen.1.gz" \
    "${prefix}/share/man/man1/"
rmdir "${prefix}/share/man/man1/man1"
find /uniget_bootstrap/share/man/man1/ -mindepth 1 -maxdepth 1 -type d -exec rm -rf {} \;
EOF