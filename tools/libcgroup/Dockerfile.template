#syntax=docker/dockerfile:1.16.0@sha256:9857836c9ee4268391bb5b09f9f157f3c91bb15821bb77969642813b0d00518d

FROM ghcr.io/uniget-org/tools/make:latest AS make

FROM registry.gitlab.com/uniget-org/images/build-base:3.21 AS prepare
COPY --from=ghcr.io/uniget-org/tools/uniget-build:latest \
    /etc/profile.d/ \
    /etc/profile.d/
SHELL [ "bash", "-clo", "errexit" ]
RUN --mount=type=cache,target=/var/cache/apk <<EOF
apk add --update-cache \
    m4 \
    bison \
    flex \
    musl-fts-dev \
    linux-headers
EOF
COPY --link --from=make / /usr/local/
RUN <<EOF
mkdir -p "${prefix}/etc/ld.so.conf.d"
EOF
COPY <<EOF /uniget_bootstrap/etc/ld.so.conf.d/libcgroup.conf.go-template
{{ .Target }}/lib
EOF
WORKDIR /tmp/libcgroup
ARG name
ARG version
# Unable to build statically linked tools
RUN --mount=type=cache,target=/var/cache/uniget/download <<EOF
url="https://github.com/libcgroup/libcgroup/releases/download/v${version}/libcgroup-${version}.tar.gz"
filename="$(basename "${url}")"

check-github-release-asset "libcgroup/libcgroup" "v${version}" "${filename}"
curl --silent --show-error --location --fail --output "${uniget_cache_download}/${filename}" \
    "${url}"

tar --file="${uniget_cache_download}/${filename}" --list
tar --file="${uniget_cache_download}/${filename}" --extract --gzip --strip-components 1

./configure --prefix="${prefix}" --disable-pam --disable-daemon --disable-systemd
make -j$(nproc) LDFLAGS=-static
make install
EOF
